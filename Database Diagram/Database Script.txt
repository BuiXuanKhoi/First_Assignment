-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.cart
(
    cart_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    cart_quantity integer,
    cart_total_price integer,
    cart_create_day date,
    cart_update_day date,
    customer_id integer,
    CONSTRAINT cart_pkey PRIMARY KEY (cart_id)
);

CREATE TABLE IF NOT EXISTS public.cart_detail
(
    cart_detail_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    cart_id integer,
    customer_id integer,
    product_id integer,
    CONSTRAINT cart_detail_pkey PRIMARY KEY (cart_detail_id)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    customer_date_of_birth date,
    customer_address text COLLATE pg_catalog."default",
    customer_phone_numer integer,
    user_id integer,
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.order_detail
(
    order_detail_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    order_address text COLLATE pg_catalog."default",
    order_id integer,
    product_id integer,
    CONSTRAINT order_detail_pkey PRIMARY KEY (order_detail_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    order_quantity integer,
    order_create_day date,
    order_update_day date,
    order_delete_day date,
    customer_id integer,
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.product_catogery
(
    product_catogery_id integer NOT NULL,
    product_catogery_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT product_catogery_pkey PRIMARY KEY (product_catogery_id)
);

CREATE TABLE IF NOT EXISTS public.product_feedback
(
    feedback_id integer,
    customer_id integer NOT NULL,
    product_id integer NOT NULL,
    feedback_comment text COLLATE pg_catalog."default",
    feedback_rating integer,
    CONSTRAINT product_feedback_customer_id_key UNIQUE (customer_id),
    CONSTRAINT product_feedback_product_id_key UNIQUE (product_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 7 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    product_name character varying(255) COLLATE pg_catalog."default",
    product_price integer,
    product_describe text COLLATE pg_catalog."default",
    product_quantity integer,
    product_create_day date,
    product_update_day date,
    product_catogery_id integer,
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    catogery_id integer NOT NULL,
    catogery_user_id integer,
    catogery_user_role character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT roles_pkey PRIMARY KEY (catogery_id),
    CONSTRAINT roles_catogery_user_id_key UNIQUE (catogery_user_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    user_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 4 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_name character varying(255) COLLATE pg_catalog."default",
    user_email character varying(255) COLLATE pg_catalog."default",
    user_password character varying(255) COLLATE pg_catalog."default",
    catogery_user_id integer,
    user_create_day date,
    user_update_day date,
    CONSTRAINT users_pkey PRIMARY KEY (user_id)
);

ALTER TABLE IF EXISTS public.cart
    ADD CONSTRAINT cart_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cart_detail
    ADD CONSTRAINT cart_detail_cart_id_fkey FOREIGN KEY (cart_id)
    REFERENCES public.cart (cart_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cart_detail
    ADD CONSTRAINT cart_detail_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cart_detail
    ADD CONSTRAINT cart_detail_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.customers
    ADD CONSTRAINT customers_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_detail
    ADD CONSTRAINT order_detail_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.order_detail
    ADD CONSTRAINT order_detail_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT orders_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_feedback
    ADD CONSTRAINT product_feedback_customer_id_fkey FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS product_feedback_customer_id_key
    ON public.product_feedback(customer_id);


ALTER TABLE IF EXISTS public.product_feedback
    ADD CONSTRAINT product_feedback_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS product_feedback_product_id_key
    ON public.product_feedback(product_id);


ALTER TABLE IF EXISTS public.products
    ADD CONSTRAINT products_product_catogery_id_fkey FOREIGN KEY (product_catogery_id)
    REFERENCES public.product_catogery (product_catogery_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_catogery_user_id_fkey FOREIGN KEY (catogery_user_id)
    REFERENCES public.roles (catogery_user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;